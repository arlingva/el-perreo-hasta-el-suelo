scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
# Plot
df.processed %>%
ggplot(aes(x=genero, y=num.token, fill=genero)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
set.seed(1234) # for reproducibility
df.freq %>%
wordcloud(words = word, freq = freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
df.freq
set.seed(1234) # for reproducibility
df.freq %>%
wordcloud(word, freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
df.freq %>%
wordcloud(word, freq)
df.freq$
wordcloud(words = df.freq$word, freq = df.freq.regueton$freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
library(magrittr)
library(readr)
library(readxl)
library(tidyr)
library(stringr)
library(janitor)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
rm(list = ls())
`%notin%` = function(x,y) !(x %in% y)
source("funciones.R")
set.seed(1234) # for reproducibility
wordcloud(words = df.freq.regueton$word, freq = df.freq.regueton$freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
library(dplyr)
library(ggplot2)
library(kableExtra)
library(readxl)
#library(tidyr)
library(stringr)
library(janitor)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
library(tidyverse)
library(hrbrthemes)
library(viridis)
rm(list = ls())
`%notin%` = function(x,y) !(x %in% y)
source("funciones.R")
library(stopwords)
stopwords <- c(stopwords("es"), stopwords("en"))
stopwords <- c(stopwords, chartr("áéíóú", "aeiou", stopwords)) %>%
unique()
df <- read_excel("data/proyecto canciones.xlsx") %>%
clean_names()
df.split <- split(df, df$genero)
n <- length(df.split)
list.processed <- list()
list.freq <- list()
vecgeneros <- c()
for(i in 1:n){
df.temp <- df.split[[i]]
genero <- df.split[[i]]$genero %>% unique()
resultado <- procesamiento(df.temp, genero, stemming = FALSE,
exclude_stopwords = TRUE, nmin = 1)
vecgeneros[i] <- genero
list.processed[[i]] <- resultado[[1]]
list.freq[[i]] <- resultado[[2]]
}
df.processed <- list.processed[[1]]
df.freq <- list.freq[[1]]
for(i in 2:n){
df.processed <- rbind(df.processed, list.processed[[i]])
df.freq <- rbind(df.freq, list.freq[[i]])
}
df.processed <- list.processed[[1]]
df.freq <- list.freq[[1]]
for(i in 2:n){
df.processed <- rbind(df.processed, list.processed[[i]])
df.freq <- rbind(df.freq, list.freq[[i]])
}
df.processed <- list.processed[[1]]
df.freq <- list.freq[[1]]
for(i in 2:n){
df.processed <- rbind(df.processed, list.processed[[i]])
df.freq <- rbind(df.freq, list.freq[[i]])
}
value <- df.processed$num.token
name <- df.processed$genero
# Plot
df.processed %>%
ggplot(aes(x=genero, y=num.token, fill=genero)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Cantidad de token por género") +
xlab("")
set.seed(1234) # for reproducibility
wordcloud(words = df.freq$word, freq = df.freq.regueton$freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
df.freq$word
df.freq.regueton$freq
set.seed(1234) # for reproducibility
wordcloud(words = df.freq$word, freq = df.freq$freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234) # for reproducibility
df.freq %>%
wordcloud(word, freq,
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234) # for reproducibility
wordcloud(words = df.freq$word[df.freq$genero == "reguetón"],
freq = df.freq$freq[df.freq$genero == "reguetón"],
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234) # for reproducibility
wordcloud(words = df.freq$word[df.freq$genero == "trova"],
freq = df.freq$freq[df.freq$genero == "trova"],
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234) # for reproducibility
valor.genero <- "trova"
wordcloud(words = df.freq$word[df.freq$genero == valor.genero],
freq = df.freq$freq[df.freq$genero == valor.genero],
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,8))
x <- df.processed$num.token[df.freq$genero == valor.genero]
lim <- c(0, 300)
# Draw the boxplot and the histogram
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(x, horizontal=TRUE,
ylim = lim, xaxt = "n" , col = "cadetblue3",
frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
hist(x, col = "cadetblue3", border = F, nbreaks = 10,
main="" , xlab = "# Token", xlim = lim)
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,8))
x <- df.processed$num.token[df.freq$genero == valor.genero]
lim <- c(0, 300)
# Draw the boxplot and the histogram
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(x, horizontal=TRUE,
ylim = lim, xaxt = "n" , col = "cadetblue3",
frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
hist(x[df.freq$genero == valor.genero], col = "cadetblue3", border = F, nbreaks = 10,
main="" , xlab = "# Token", xlim = lim)
boxplot(x, horizontal=TRUE,
ylim = lim, xaxt = "n" , col = "cadetblue3",
frame = F)
df.processed$num.token[df.freq$genero == valor.genero]
df.processed$num.token
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,8))
x <- df.processed$num.token[df.processed$genero == valor.genero]
lim <- c(0, 300)
# Draw the boxplot and the histogram
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(x, horizontal=TRUE,
ylim = lim, xaxt = "n" , col = "cadetblue3",
frame = F)
par(mar=c(4, 3.1, 1.1, 2.1))
hist(x[df.processed$genero == valor.genero], col = "cadetblue3",
border = F, nbreaks = 10,
main="" , xlab = "# Token", xlim = lim)
df.processed$num.token[df.processed$genero == valor.genero]
valor.genero
df.processed$num.token[df.processed$genero == valor.genero]
df.freq$num.token[df.freq$genero == valor.genero] %>%
summary()
df.freq$num.token[df.freq$genero == valor.genero] %>%
df.freq$num.token
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary()
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary() %>%
t()
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary()
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary() %>%
kbl()
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary()
df.processed$num.token[df.processed$genero == valor.genero]
df.processed$num.token[df.processed$genero == valor.genero] %>%
summary()
df.processed[df.processed$genero == valor.genero]
valor.genero <- "trova"
df.processed
df.processed[df.processed$genero == valor.genero]
valor.genero <- "trova"
df.processed %>%
select(interprete, cancion, num.token) %>%
arrange(desc(num.token))
valor.genero <- "trova"
df.processed %>%
select(cancion, num.token, interprete) %>%
arrange(desc(num.token)) %>%
head(5)
top <- function(df, n){
df %>%
select(cancion, num.token, interprete) %>%
arrange(desc(num.token)) %>%
head(n)
}
###
library(plotly)
barplotly <- function(df){
x <- df$cancion
y <- df$num.token
text <- df$cancion
data <- data.frame(x, y, text)
fig <- plot_ly(data, x = ~x, y = ~y, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
fig
}
# top.token(df.processed, "reguetón", 5)
barplotly(df.processed)
# top.token(df.processed, "reguetón", 5)
df.processed %>%
arrange(desc(num.token)) %>%
barplotly()
source("~/git/el-perreo-hasta-el-suelo/funciones.R", echo=TRUE)
###
library(plotly)
barplotly <- function(df){
x <- df$cancion
y <- df$num.token
text <- df$cancion
data <- data.frame(x=reorder(df$cancion, -df$num.token), y, text)
#ggplot(data,aes(x= reorder(cat,-num),num))+geom_bar(stat ="identity")
fig <- plot_ly(data, x = ~x, y = ~y, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
fig
}
# top.token(df.processed, "reguetón", 5)
df.processed %>%
arrange(desc(num.token)) %>%
barplotly()
barplotly <- function(df, genero, n){
df <- df(df, genero, n) %>%
tail.token()
x <- df$cancion
y <- df$num.token
text <- df$cancion
#data <- data.frame(x=reorder(df$cancion, -df$num.token), y, text)
#ggplot(data,aes(x= reorder(cat,-num),num))+geom_bar(stat ="identity")
fig <- plot_ly(data, x = ~x, y = ~y, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
fig
}
# top.token(df.processed, "reguetón", 5)
df.processed %>%
arrange(desc(num.token)) %>%
barplotly()
# top.token(df.processed, "reguetón", 5)
df.processed %>%
#arrange(desc(num.token)) %>%
barplotly("reguetón", 10)
source("~/git/el-perreo-hasta-el-suelo/funciones.R", echo=TRUE)
###
library(plotly)
barplotly <- function(df, genero, n){
#df <- df(df, genero, n) %>% tail.token()
df <- df %>%
arrange(desc(num.token)) %>%
head(10)
x <- df$cancion
y <- df$num.token
text <- df$cancion
data <- data.frame(x=reorder(df$cancion, -df$num.token), y, text)
#ggplot(data,aes(x= reorder(cat,-num),num))+geom_bar(stat ="identity")
fig <- plot_ly(data, x = ~x, y = ~y, type = 'bar', text = text,
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5)))
fig <- fig %>% layout(title = "January 2013 Sales Report",
xaxis = list(title = ""),
yaxis = list(title = ""))
fig
}
# top.token(df.processed, "reguetón", 5)
df.processed %>%
#arrange(desc(num.token)) %>%
barplotly("reguetón", 10)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(readxl)
#library(tidyr)
library(stringr)
library(janitor)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
library(tidyverse)
library(hrbrthemes)
library(viridis)
rm(list = ls())
`%notin%` = function(x,y) !(x %in% y)
source("funciones.R")
library(stopwords)
stopwords <- c(stopwords("es"), stopwords("en"))
stopwords <- c(stopwords, chartr("áéíóú", "aeiou", stopwords)) %>%
unique()
df <- read_excel("data/proyecto canciones.xlsx") %>%
clean_names()
df.split <- split(df, df$genero)
n <- length(df.split)
list.processed <- list()
list.freq <- list()
vecgeneros <- c()
for(i in 1:n){
df.temp <- df.split[[i]]
genero <- df.split[[i]]$genero %>% unique()
resultado <- procesamiento(df.temp, genero, stemming = FALSE,
exclude_stopwords = TRUE, nmin = 1)
vecgeneros[i] <- genero
list.processed[[i]] <- resultado[[1]]
list.freq[[i]] <- resultado[[2]]
}
df.processed <- list.processed[[1]]
df.freq <- list.freq[[1]]
for(i in 2:n){
df.processed <- rbind(df.processed, list.processed[[i]])
df.freq <- rbind(df.freq, list.freq[[i]])
}
#knitr::include_graphics("images/antecedente.jpeg")
value <- df.processed$num.token
name <- df.processed$genero
# Plot
df.processed %>%
ggplot(aes(x=genero, y=num.token, fill=genero)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Cantidad de token por género") +
xlab("")
set.seed(1234) # for reproducibility
valor.genero <- "reguetón"
media <- df.processed$num.token[df.processed$genero == valor.genero] %>%
mean()
paste("Promedio de palabras:", round(media, 2))
wordcloud(words = df.freq$word[df.freq$genero == valor.genero],
freq = df.freq$freq[df.freq$genero == valor.genero],
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# top.token(df.processed, "reguetón", 5)
df.processed %>%
op.token(df, "reguetón", 10)
df.processed %>%
top.token(df, "reguetón", 10)
df.processed %>%
top.token("reguetón", 10)
# top.token(df.processed, "reguetón", 5)
df.processed %>%
top.token("reguetón", 10) %>%
#arrange(desc(num.token)) %>%
barplotly()
View(df.processed)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(readxl)
#library(tidyr)
library(stringr)
library(janitor)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
library(tidyverse)
library(hrbrthemes)
library(viridis)
rm(list = ls())
`%notin%` = function(x,y) !(x %in% y)
source("funciones.R")
library(stopwords)
stopwords <- c(stopwords("es"), stopwords("en"))
stopwords <- c(stopwords, chartr("áéíóú", "aeiou", stopwords)) %>%
unique()
df <- read_excel("data/proyecto canciones.xlsx") %>%
clean_names()
df.split <- split(df, df$genero)
n <- length(df.split)
list.processed <- list()
list.freq <- list()
vecgeneros <- c()
for(i in 1:n){
df.temp <- df.split[[i]]
genero <- df.split[[i]]$genero %>% unique()
resultado <- procesamiento(df.temp, genero, stemming = FALSE,
exclude_stopwords = TRUE, nmin = 1)
vecgeneros[i] <- genero
list.processed[[i]] <- resultado[[1]]
list.freq[[i]] <- resultado[[2]]
}
df.processed <- list.processed[[1]]
df.freq <- list.freq[[1]]
for(i in 2:n){
df.processed <- rbind(df.processed, list.processed[[i]])
df.freq <- rbind(df.freq, list.freq[[i]])
}
#knitr::include_graphics("images/antecedente.jpeg")
value <- df.processed$num.token
name <- df.processed$genero
# Plot
df.processed %>%
ggplot(aes(x=genero, y=num.token, fill=genero)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Cantidad de token por género") +
xlab("")
set.seed(1234) # for reproducibility
valor.genero <- "reguetón"
media <- df.processed$num.token[df.processed$genero == valor.genero] %>%
mean()
paste("Promedio de palabras:", round(media, 2))
wordcloud(words = df.freq$word[df.freq$genero == valor.genero],
freq = df.freq$freq[df.freq$genero == valor.genero],
min.freq = 1, max.words=200, random.order=FALSE,
rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# top.token(df.processed, "reguetón", 5)
ggbarplot %>%
top.token("reguetón", 5) %>%
#arrange(desc(num.token)) %>%
barplotly()
ggbarplot %>%
top.token("reguetón", 5)
# top.token(df.processed, "reguetón", 5)
df.processed %>%
top.token("reguetón", 5) %>%
#arrange(desc(num.token)) %>%
barplotly()
# top.token(df.processed, "reguetón", 5)
df.processed %>%
top.token("reguetón", 5) %>%
#arrange(desc(num.token)) %>%
ggbarplot()
